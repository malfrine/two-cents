services:
    - postgres

stages:
  - static analysis
  - test
  - approve_pr
  - approve_deployment
  - deploy


flake8:
  stage: static analysis
  image: python:3.8
  script:
    - pip install -r backend/requirements-test.txt
    - flake8
  allow_failure: false
  only:
    - merge_requests

backend_test:
  stage: test
  image: python:3.8
  services:
    - name: postgres:10.1-alpine
      alias: postgres
  variables:
    POSTGRES_PORT: 5432
    POSTGRES_DB: two-cents
    POSTGRES_USER: postgresuser
    POSTGRES_PASSWORD: mysecretpass
    TESTING: "True"
  script:
    - apt-get update -qy
    - apt-get install -y python-dev python-pip
    - apt-get install -y coinor-cbc
    - cd backend
    - pip install -r requirements.txt
    - cd core
    - python runtests.py # run backend tests
    - cd apps/pennies
    - pytest # run pennies tests
  allow_failure: false
  only:
    - merge_requests

approve_pr:
  stage: approve_pr
  script:
    - echo Approved!
  when: manual
  allow_failure: false
  only:
    - merge_requests

approve_deployment:
  stage: approve_deployment
  script:
    - echo Approved!
  when: manual
  allow_failure: false
  only:
    - master

frontend:
  image: node
  stage: deploy
  script:
    - npm install -g caprover
    - git status
    - caprover login
    - caprover deploy --caproverApp two-cents-frontend --branch "$(git rev-parse HEAD)"
    - caprover logout
  allow_failure: false
  only:
    - master

backend:
  image: node
  stage: deploy
  script:
    - npm install -g caprover
    - git status
    - caprover login
    - caprover deploy --caproverApp two-cents-backend --branch "$(git rev-parse HEAD)"
    - caprover logout
  allow_failure: false
  only:
    - master
